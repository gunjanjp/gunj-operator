apiVersion: observability.io/v1beta1
kind: ObservabilityPlatform
metadata:
  name: production-platform
  namespace: monitoring
  # Finalizers will be automatically added by the operator
  # finalizers:
  #   - observabilityplatform.observability.io/finalizer
  #   - observabilityplatform.observability.io/component-cleanup
  #   - observabilityplatform.observability.io/external-resources
  #   - observabilityplatform.observability.io/backup-finalizer (if backup is enabled)
spec:
  # Component Configuration
  components:
    prometheus:
      enabled: true
      version: v2.48.0
      resources:
        requests:
          memory: "4Gi"
          cpu: "1"
        limits:
          memory: "8Gi"
          cpu: "2"
      storage:
        size: 100Gi
        storageClassName: fast-ssd
      retention: 30d
      
    grafana:
      enabled: true
      version: "10.2.0"
      resources:
        requests:
          memory: "1Gi"
          cpu: "500m"
        limits:
          memory: "2Gi"
          cpu: "1"
      
    loki:
      enabled: true
      version: "2.9.0"
      storage:
        size: 200Gi
      retention: "168h"  # 7 days
      
    tempo:
      enabled: true
      version: "2.3.0"
      storage:
        size: 50Gi
      retention: "336h"  # 14 days
        
  # Global Configuration
  global:
    externalLabels:
      cluster: production
      region: us-east-1
      environment: prod
    logLevel: info
    
  # Backup Configuration - enables backup finalizer
  backup:
    enabled: true
    schedule: "0 2 * * *"  # Daily at 2 AM
    retentionDays: 7
    destination:
      type: s3
      s3:
        enabled: true
        bucketName: observability-backups
        region: us-east-1
        
  # Security Configuration  
  security:
    networkPolicy: true
    podSecurityPolicy: true
    
---
# Example of deletion behavior:
#
# When you delete this ObservabilityPlatform resource:
# 
# 1. The operator will detect the deletion timestamp
# 2. The finalizers will be processed in order:
#    a. backup-finalizer: Creates a final backup of all data
#    b. component-cleanup: Gracefully shuts down Tempo, Loki, Grafana, and Prometheus
#    c. external-resources: Cleans up PVCs, ConfigMaps, Secrets, and Services
#    d. main finalizer: Performs final cleanup and removes namespace labels
#
# 3. The backup ConfigMap will be preserved with label:
#    observability.io/backup-type: pre-deletion
#
# 4. Deletion process respects a 5-minute grace period for graceful shutdown
#
# To delete without backups (faster but no data preservation):
# kubectl delete observabilityplatform production-platform -n monitoring --cascade=foreground
#
# To check deletion progress:
# kubectl describe observabilityplatform production-platform -n monitoring
#
# To view preserved backups after deletion:
# kubectl get configmaps -n monitoring -l observability.io/backup-type=pre-deletion
