# Mutating Webhook Examples for ObservabilityPlatform

# Example 1: Minimal configuration that will be mutated with defaults
---
apiVersion: observability.io/v1beta1
kind: ObservabilityPlatform
metadata:
  name: minimal-platform
  namespace: default
spec:
  components:
    prometheus:
      enabled: true
    grafana:
      enabled: true

# After mutation by webhook, this becomes:
---
apiVersion: observability.io/v1beta1
kind: ObservabilityPlatform
metadata:
  name: minimal-platform
  namespace: default
  labels:
    app.kubernetes.io/managed-by: gunj-operator
    app.kubernetes.io/name: observability-platform
    app.kubernetes.io/instance: minimal-platform
    app.kubernetes.io/version: v2.0.0
  annotations:
    observability.io/created-by: gunj-operator
spec:
  components:
    prometheus:
      enabled: true
      version: v2.48.0
      replicas: 1
      resources:
        requests:
          cpu: 250m
          memory: 512Mi
        limits:
          cpu: "1"
          memory: 2Gi
      storage:
        size: 10Gi
        retention: 15d
      externalLabels:
        cluster: default
    grafana:
      enabled: true
      version: 10.2.0
      replicas: 1
      adminUser: admin
      adminPassword: <auto-generated-secure-password>
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits:
          cpu: 500m
          memory: 1Gi
      persistence:
        enabled: true
        size: 1Gi
  global:
    logLevel: info
    externalLabels:
      organization: default
      environment: default
    retentionPolicies:
      metrics: 30d
      logs: 7d
      traces: 3d

---
# Example 2: High Availability configuration
apiVersion: observability.io/v1beta1
kind: ObservabilityPlatform
metadata:
  name: ha-platform
  namespace: production
spec:
  components:
    prometheus:
      enabled: true
    grafana:
      enabled: true
    loki:
      enabled: true
  highAvailability:
    enabled: true

# After mutation, replica counts are adjusted for HA:
# - Prometheus: 3 replicas (from default 1)
# - Grafana: 2 replicas (from default 1)
# - Anti-affinity rules are added
# - Environment label is set to "production"

---
# Example 3: Backup configuration with defaults
apiVersion: observability.io/v1beta1
kind: ObservabilityPlatform
metadata:
  name: backup-platform
  namespace: staging
spec:
  components:
    prometheus:
      enabled: true
  backup:
    enabled: true

# After mutation:
# - backup.schedule: "0 2 * * *" (daily at 2 AM)
# - backup.retention: 7 (days)
# - backup.storageType: "s3"
# - backup.storageLocation: "observability-backups/staging/backup-platform"
# - Environment label is set to "staging"

---
# Example 4: Partial resource specifications
apiVersion: observability.io/v1beta1
kind: ObservabilityPlatform
metadata:
  name: partial-resources
  namespace: development
spec:
  components:
    prometheus:
      enabled: true
      resources:
        requests:
          cpu: 500m
          # memory is missing - will be defaulted to 512Mi
        # limits are missing - will be defaulted

# After mutation, missing resource specifications are filled in

---
# Example 5: Organization-specific defaults
apiVersion: observability.io/v1beta1
kind: ObservabilityPlatform
metadata:
  name: org-platform
  namespace: custom-namespace
  labels:
    organization: acme-corp
spec:
  components:
    prometheus:
      enabled: true
      externalLabels:
        team: platform
    grafana:
      enabled: true
      # No admin password specified - will be auto-generated
  global:
    externalLabels:
      region: us-west-2

# After mutation:
# - Preserves existing labels and external labels
# - Adds missing default labels
# - Generates secure Grafana admin password
# - Adds organization: "default" to global external labels (if not present)
# - Environment is set to "default" (custom namespace)

---
# Example 6: Complete configuration with alerting
apiVersion: observability.io/v1beta1
kind: ObservabilityPlatform
metadata:
  name: full-platform
  namespace: monitoring
spec:
  components:
    prometheus:
      enabled: true
    grafana:
      enabled: true
    loki:
      enabled: true
    tempo:
      enabled: true
  alerting:
    alertmanager:
      enabled: true

# After mutation:
# - All components get their default versions and resources
# - Alertmanager gets default configuration with route and receivers
# - Default storage sizes are applied
# - Retention policies are set

---
# Example 7: Existing values preservation
apiVersion: observability.io/v1beta1
kind: ObservabilityPlatform
metadata:
  name: custom-platform
  namespace: default
  labels:
    app.kubernetes.io/managed-by: custom-controller  # This won't be overridden
    team: sre
spec:
  components:
    prometheus:
      enabled: true
      version: v2.45.0  # This specific version is preserved
      replicas: 5       # This replica count is preserved
      storage:
        size: 100Gi     # This size is preserved
        # retention will be defaulted to 15d

# The mutating webhook respects existing values and only adds missing defaults
