# Gunj Operator - Pre-commit Configuration
# Version: v2.0
# Purpose: Automated code quality checks before commits

# Minimum pre-commit version
minimum_pre_commit_version: 2.20.0

# Default stages
default_stages: [commit]

# Repository configurations
repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-added-large-files
        args: ['--maxkb=1024']
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-json
      - id: check-merge-conflict
      - id: check-shebang-scripts-are-executable
      - id: check-symlinks
      - id: check-toml
      - id: check-xml
      - id: check-yaml
        args: ['--unsafe']
      - id: detect-private-key
      - id: end-of-file-fixer
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: trailing-whitespace
        args: ['--markdown-linebreak-ext=md']
      - id: no-commit-to-branch
        args: ['--branch', 'main', '--branch', 'master']

  # Go formatting and linting
  - repo: https://github.com/dnephin/pre-commit-golang
    rev: v0.5.1
    hooks:
      - id: go-fmt
      - id: go-vet
      - id: go-imports
        args: ['-local', 'github.com/gunjanjp/gunj-operator']
      - id: go-cyclo
        args: ['-over', '15']
      - id: go-mod-tidy
      - id: go-unit-tests
      - id: golangci-lint
        args: ['--config', '.golangci.yml']

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: ['-c', '.yamllint.yml']

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: ['--config', '.markdownlint.json']

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        args: ['--config', '.hadolint.yaml']

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        args: ['-x']

  # JavaScript/TypeScript linting and formatting
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.56.0
    hooks:
      - id: eslint
        files: \.(js|jsx|ts|tsx)$
        types: [file]
        additional_dependencies:
          - eslint@8.56.0
          - eslint-config-prettier@9.1.0
          - eslint-plugin-react@7.33.2
          - eslint-plugin-react-hooks@4.6.0
          - '@typescript-eslint/eslint-plugin@6.18.1'
          - '@typescript-eslint/parser@6.18.1'

  # Prettier formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        types_or: [css, javascript, jsx, ts, tsx, json, yaml, markdown]
        additional_dependencies:
          - prettier@3.1.0
          - '@prettier/plugin-xml@3.2.2'

  # Security checks
  - repo: https://github.com/zricethezav/gitleaks
    rev: v8.18.1
    hooks:
      - id: gitleaks

  # Commit message linting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # License headers
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.4
    hooks:
      - id: insert-license
        name: Add license header to Go files
        files: \.go$
        args:
          - --license-filepath
          - hack/boilerplate.go.txt
          - --comment-style
          - //
      - id: insert-license
        name: Add license header to Shell scripts
        files: \.sh$
        args:
          - --license-filepath
          - hack/boilerplate.sh.txt
          - --comment-style
          - '#'

# Configuration for specific hooks
fail_fast: false
