# Default Helm values for Tempo deployment
# These values can be overridden by the operator based on the ObservabilityPlatform spec

# Tempo configuration
tempo:
  repository: grafana/tempo
  tag: 2.3.0
  pullPolicy: IfNotPresent
  
  # Number of replicas
  replicas: 1
  
  # Resources
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 1Gi
  
  # Update strategy
  updateStrategy:
    type: RollingUpdate
  
  # Pod annotations
  podAnnotations: {}
  
  # Pod labels
  podLabels: {}
  
  # Node selector
  nodeSelector: {}
  
  # Tolerations
  tolerations: []
  
  # Affinity
  affinity: {}

# Tempo configuration
tempoConfig:
  auth_enabled: false
  
  server:
    http_listen_port: 3200
    grpc_listen_port: 9095
    log_level: info
  
  distributor:
    receivers:
      jaeger:
        protocols:
          thrift_http:
            endpoint: 0.0.0.0:14268
          grpc:
            endpoint: 0.0.0.0:14250
          thrift_binary:
            endpoint: 0.0.0.0:6832
          thrift_compact:
            endpoint: 0.0.0.0:6831
      zipkin:
        endpoint: 0.0.0.0:9411
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      opencensus:
        endpoint: 0.0.0.0:55678
  
  ingester:
    max_block_duration: 5m
    max_block_bytes: 1073741824  # 1GB
  
  compactor:
    compaction:
      block_retention: 48h
      compacted_block_retention: 1h
    ring:
      kvstore:
        store: inmemory
  
  storage:
    trace:
      backend: local
      local:
        path: /var/tempo/traces
      wal:
        path: /var/tempo/wal
      blocklist_poll: 5m
    
  querier:
    frontend_worker:
      frontend_address: tempo-query-frontend:9095
    max_concurrent_queries: 20
    search:
      prefer_self: 10
      external_endpoints: []
  
  query_frontend:
    max_retries: 2
    search:
      concurrent_jobs: 1000
      target_bytes_per_job: 104857600
  
  metrics_generator:
    registry:
      external_labels:
        source: tempo
    storage:
      path: /var/tempo/generator/wal
      remote_write:
        - url: http://prometheus:9090/api/v1/write
  
  overrides:
    max_traces_per_user: 10000
    max_search_duration: 48h
    ingestion_rate_limit_bytes: 15000000
    ingestion_burst_size_bytes: 20000000
    max_bytes_per_trace: 5000000
    max_search_bytes_per_trace: 50000

# Persistence configuration
persistence:
  enabled: true
  size: 10Gi
  storageClass: ""
  accessModes:
    - ReadWriteOnce

# Service configuration
service:
  type: ClusterIP
  annotations: {}
  labels: {}

# Service Monitor
serviceMonitor:
  enabled: true
  namespace: ""
  additionalLabels: {}
  interval: 30s
  scrapeTimeout: 10s

# Prometheus Rule
prometheusRule:
  enabled: true
  namespace: ""
  additionalLabels: {}

# Ingress configuration
ingress:
  enabled: false
  annotations: {}
  hosts: []
  tls: []

# Gateway configuration (disabled by default)
gateway:
  enabled: false

# Enterprise features (disabled)
enterprise:
  enabled: false

# Multi-tenancy (disabled)
multitenancy:
  enabled: false

# Minio configuration (disabled)
minio:
  enabled: false

# Service Account
serviceAccount:
  create: true
  name: ""
  annotations: {}
  automountServiceAccountToken: true

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 10001
  runAsGroup: 10001
  fsGroup: 10001

# Container security context
containerSecurityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# Extra containers
extraContainers: []

# Extra volumes
extraVolumes: []

# Extra volume mounts
extraVolumeMounts: []

# Extra environment variables
extraEnv: []

# Extra environment variables from
extraEnvFrom: []

# Extra ports
extraPorts: []

# Liveness probe
livenessProbe:
  httpGet:
    path: /ready
    port: 3200
  initialDelaySeconds: 30
  periodSeconds: 10

# Readiness probe
readinessProbe:
  httpGet:
    path: /ready
    port: 3200
  initialDelaySeconds: 30
  periodSeconds: 10

# Priority class name
priorityClassName: ""

# Global settings
global:
  image:
    registry: docker.io
  dnsService: ""
  dnsNamespace: ""
  clusterDomain: cluster.local
