# Default Helm values for Grafana deployment
# These values can be overridden by the operator based on the ObservabilityPlatform spec

# Number of replicas
replicas: 1

# Deployment strategy
deploymentStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

# Container image
image:
  repository: grafana/grafana
  tag: 10.2.0
  pullPolicy: IfNotPresent

# Image pull secrets
imagePullSecrets: []

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 472
  fsGroup: 472

# Container security context
containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true

# Resources
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 500m
    memory: 512Mi

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Pod annotations
podAnnotations: {}

# Pod labels
podLabels: {}

# Service configuration
service:
  enabled: true
  type: ClusterIP
  port: 80
  targetPort: 3000
  annotations: {}
  labels: {}

# Ingress configuration
ingress:
  enabled: false
  annotations: {}
  labels: {}
  path: /
  pathType: Prefix
  hosts: []
  tls: []

# Persistence
persistence:
  enabled: true
  type: pvc
  storageClassName: ""
  accessModes:
    - ReadWriteOnce
  size: 2Gi
  annotations: {}
  finalizers:
    - kubernetes.io/pvc-protection

# Admin credentials
admin:
  existingSecret: ""
  userKey: admin-user
  passwordKey: admin-password

# Default admin password (should be changed)
adminPassword: admin

# LDAP configuration
ldap:
  enabled: false
  existingSecret: ""
  config: ""

# SMTP configuration
smtp:
  enabled: false
  existingSecret: ""

# Environment variables
env: {}

# Extra environment variables from secrets
envFromSecret: ""

# Extra environment variables from configmaps
envFromConfigMap: ""

# Extra volumes
extraVolumes: []

# Extra volume mounts
extraVolumeMounts: []

# Extra containers
extraContainers: []

# Extra init containers
extraInitContainers: []

# Grafana configuration
grafana.ini:
  paths:
    data: /var/lib/grafana/
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  
  analytics:
    check_for_updates: true
    
  log:
    mode: console
    level: info
    
  grafana_net:
    url: https://grafana.net
    
  server:
    domain: "{{ if (and .Values.ingress.enabled .Values.ingress.hosts) }}{{ .Values.ingress.hosts | first }}{{ else }}''{{ end }}"
    root_url: "%(protocol)s://%(domain)s:%(http_port)s"
    serve_from_sub_path: false
    
  users:
    allow_sign_up: false
    allow_org_create: false
    auto_assign_org: true
    auto_assign_org_role: Viewer
    
  auth:
    disable_login_form: false
    disable_signout_menu: false
    
  auth.anonymous:
    enabled: false
    org_role: Viewer
    
  auth.basic:
    enabled: true
    
  auth.proxy:
    enabled: false
    
  security:
    admin_user: admin
    admin_password: "{{ .Values.adminPassword }}"
    
  database:
    type: sqlite3
    
  remote_cache:
    type: database
    
  dataproxy:
    timeout: 30
    
  dashboards:
    versions_to_keep: 20
    
  unified_alerting:
    enabled: true
    
  alerting:
    enabled: false

# Datasources configuration
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus-server:9090
        access: proxy
        isDefault: true
        jsonData:
          timeInterval: 30s
      - name: Loki
        type: loki
        url: http://loki:3100
        access: proxy
        jsonData:
          maxLines: 1000
      - name: Tempo
        type: tempo
        url: http://tempo:3200
        access: proxy
        jsonData:
          tracesToLogs:
            datasourceUid: loki
            tags: ["job", "instance", "pod", "namespace"]
            mappedTags: [{ key: "service.name", value: "service" }]
            mapTagNamesEnabled: true
            spanStartTimeShift: "1h"
            spanEndTimeShift: "1h"
            filterByTraceID: true
            filterBySpanID: true
          serviceMap:
            datasourceUid: prometheus
          search:
            hide: false
          nodeGraph:
            enabled: true

# Dashboard providers
dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards/default

# Dashboards
dashboards:
  default:
    prometheus-stats:
      gnetId: 2
      revision: 2
      datasource: Prometheus
    kubernetes-cluster:
      gnetId: 7249
      revision: 1
      datasource: Prometheus
    node-exporter:
      gnetId: 1860
      revision: 27
      datasource: Prometheus

# Dashboard sidecar
sidecar:
  dashboards:
    enabled: true
    label: grafana_dashboard
    folder: /tmp/dashboards
    provider:
      name: sidecarProvider
      orgid: 1
      folder: ''
      type: file
      disableDelete: false
      allowUiUpdates: false
  datasources:
    enabled: true
    label: grafana_datasource

# RBAC
rbac:
  create: true
  pspEnabled: false
  pspUseAppArmor: false
  namespaced: false

# Service account
serviceAccount:
  create: true
  name: ""
  nameTest: ""
  annotations: {}
  labels: {}

# Headless service
headlessService: false

# Autoscaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPU: 80
  targetMemory: 80

# Pod disruption budget
podDisruptionBudget:
  minAvailable: 1

# Test framework
testFramework:
  enabled: false

# Network policy
networkPolicy:
  enabled: false
  ingress: true
  allowExternal: true
  explicitNamespacesSelector: {}

# Enable creating the grafana configmap
createConfigmap: true

# Extra configmaps
extraConfigmapMounts: []

# Extra secrets
extraSecretMounts: []

# Extra empty dir mounts
extraEmptyDirMounts: []

# Priority class name
priorityClassName: ""

# Init chown data
initChownData:
  enabled: true
  image:
    repository: busybox
    tag: "1.31.1"
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 10m
      memory: 32Mi
    limits:
      cpu: 100m
      memory: 64Mi

# Enable enterprise features
enterprise:
  enabled: false

# Image renderer
imageRenderer:
  enabled: false

# Revision history limit
revisionHistoryLimit: 10

# Enable service links
enableServiceLinks: true
