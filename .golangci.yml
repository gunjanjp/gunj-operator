# golangci-lint configuration for Gunj Operator
# Version: v1.55.2
# Documentation: https://golangci-lint.run/usage/configuration/

run:
  timeout: 10m
  tests: true
  build-tags:
    - integration
    - e2e
  skip-dirs:
    - hack
    - vendor
    - third_party
  skip-files:
    - zz_generated.deepcopy.go
    - .*_generated.go

linters-settings:
  # Go vet configuration
  govet:
    check-shadowing: true
    enable-all: true
    disable:
      - fieldalignment # Too many false positives

  # Error check configuration
  errcheck:
    check-type-assertions: true
    check-blank: true
    exclude-functions:
      - io.Copy(*bytes.Buffer)
      - io.Copy(os.Stdout)

  # Static check configuration
  staticcheck:
    checks: ["all", "-SA1019", "-SA4006", "-SA6002"]

  # Unused configuration
  unused:
    check-exported: true

  # Gosimple configuration
  gosimple:
    checks: ["all", "-S1005", "-S1000"]

  # Stylecheck configuration
  stylecheck:
    checks: ["all", "-ST1000", "-ST1003"]
    initialisms: ["ACL", "API", "ASCII", "CPU", "CSS", "DNS", "EOF", "GUID", "HTML", "HTTP", "HTTPS", "ID", "IP", "JSON", "JWT", "QPS", "RAM", "RPC", "SLA", "SMTP", "SQL", "SSH", "TCP", "TLS", "TTL", "UDP", "UI", "GID", "UID", "UUID", "URI", "URL", "UTF8", "VM", "XML", "XMPP", "XSRF", "XSS", "YAML", "CRD", "RBAC"]

  # Gocyclo - cyclomatic complexity
  gocyclo:
    min-complexity: 15

  # Gocognit - cognitive complexity
  gocognit:
    min-complexity: 20

  # Dupl - code duplication
  dupl:
    threshold: 100

  # Goconst - repeated strings
  goconst:
    min-len: 3
    min-occurrences: 3

  # Gofmt
  gofmt:
    simplify: true

  # Goimports
  goimports:
    local-prefixes: github.com/gunjanjp/gunj-operator

  # Misspell
  misspell:
    locale: US

  # Lll - line length limit
  lll:
    line-length: 140
    tab-width: 1

  # Nakedret - naked returns
  nakedret:
    max-func-lines: 30

  # Prealloc
  prealloc:
    simple: true
    range-loops: true
    for-loops: true

  # Nolintlint
  nolintlint:
    allow-unused: false
    allow-leading-space: false
    require-explanation: true
    require-specific: true

  # Gosec - security
  gosec:
    severity: medium
    confidence: medium
    excludes:
      - G101 # Potential hardcoded credentials (too many false positives)
      - G401 # Use of weak cryptographic primitive (we'll handle case by case)

  # Revive
  revive:
    ignore-generated-header: true
    severity: error
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: exported
      - name: increment-decrement
      - name: var-naming
      - name: var-declaration
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: unexported-return
      - name: indent-error-flow
      - name: errorf
      - name: empty-block
      - name: superfluous-else
      - name: unused-parameter
      - name: unreachable-code
      - name: redefines-builtin-id

  # Depguard
  depguard:
    rules:
      main:
        deny:
          - pkg: "github.com/sirupsen/logrus"
            desc: "Use github.com/go-logr/logr instead"
          - pkg: "github.com/pkg/errors"
            desc: "Use fmt.Errorf with %w instead"
          - pkg: "io/ioutil"
            desc: "Deprecated: use io or os packages instead"

linters:
  enable-all: true
  disable:
    # Deprecated linters
    - deadcode
    - exhaustivestruct
    - golint
    - ifshort
    - interfacer
    - maligned
    - nosnakecase
    - scopelint
    - structcheck
    - varcheck
    
    # Too strict or not relevant
    - exhaustive # Too strict for our use case
    - exhaustruct # Replaced exhaustivestruct
    - gochecknoglobals # We need some globals
    - gochecknoinits # Init functions are needed
    - godox # We want to allow TODOs
    - goerr113 # Too strict for error handling
    - gomnd # Magic numbers are fine in some cases
    - nlreturn # Too strict
    - paralleltest # Not all tests need to be parallel
    - testpackage # We prefer internal test packages
    - tparallel # Not all tests need to be parallel
    - varnamelen # Sometimes short names are fine
    - wrapcheck # Too strict for error wrapping
    - wsl # Too strict on whitespace
    - nonamedreturns # Named returns are useful sometimes
    - tagliatelle # We have our own struct tag conventions
    - ireturn # Sometimes returning interfaces is necessary
    - forcetypeassert # We handle type assertions carefully

issues:
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - dupl
        - gosec
        - maintidx

    # Exclude some linters from running on generated files
    - path: _generated\.go
      linters:
        - gocritic
        - gocyclo
        - errcheck
        - dupl
        - gosec

    # Exclude known issues in vendor/third-party code
    - path: vendor/
      linters:
        - typecheck
        - unused

    # Exclude lll issues for long lines with URLs
    - linters:
        - lll
      source: "https://"

  # Maximum issues count per one linter
  max-issues-per-linter: 50

  # Maximum count of issues with the same text
  max-same-issues: 3

  # Show only new issues
  new: false

  # Fix found issues (if it's supported by the linter)
  fix: false

severity:
  default-severity: error
  case-sensitive: false
  rules:
    - linters:
        - dupl
      severity: info
