apiVersion: observability.io/v1beta1
kind: PrometheusConfig
metadata:
  name: advanced-service-discovery
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus-config
    app.kubernetes.io/instance: service-discovery
spec:
  targetPlatform:
    name: production-platform
  
  # Advanced scrape configurations
  scrapeConfigs:
  - jobName: kubernetes-pods
    scrapeInterval: "30s"
    scrapeTimeout: "10s"
    scheme: http
    serviceDiscovery:
      kubernetesSD:
      - role: pod
        namespaces:
          names:
          - default
          - production
          - staging
        selectors:
        - role: pod
          label: "prometheus.io/scrape=true"
    relabelConfigs:
    # Only keep pods with prometheus.io/scrape annotation
    - sourceLabels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    # Use prometheus.io/scheme annotation for scheme
    - sourceLabels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
      action: replace
      targetLabel: __scheme__
      regex: (https?)
    # Use prometheus.io/path annotation for metrics path
    - sourceLabels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      targetLabel: __metrics_path__
      regex: (.+)
    # Use prometheus.io/port annotation for port
    - sourceLabels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      targetLabel: __address__
    # Add pod labels
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    # Add namespace
    - sourceLabels: [__meta_kubernetes_namespace]
      action: replace
      targetLabel: kubernetes_namespace
    # Add pod name
    - sourceLabels: [__meta_kubernetes_pod_name]
      action: replace
      targetLabel: kubernetes_pod_name
    metricRelabelConfigs:
    # Drop expensive metrics
    - sourceLabels: [__name__]
      regex: "go_gc_.*"
      action: drop
    # Limit cardinality
    - sourceLabels: [__name__, container]
      regex: "container_.*;POD"
      action: drop
  
  - jobName: kubernetes-services
    serviceDiscovery:
      kubernetesSD:
      - role: service
        namespaces:
          allNamespaces: true
    relabelConfigs:
    - sourceLabels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - sourceLabels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
      action: replace
      targetLabel: __scheme__
      regex: (https?)
    - sourceLabels: [__meta_kubernetes_service_annotation_prometheus_io_path]
      action: replace
      targetLabel: __metrics_path__
      regex: (.+)
    - sourceLabels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
      action: replace
      targetLabel: __address__
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
    - action: labelmap
      regex: __meta_kubernetes_service_label_(.+)
    - sourceLabels: [__meta_kubernetes_namespace]
      targetLabel: kubernetes_namespace
    - sourceLabels: [__meta_kubernetes_service_name]
      targetLabel: kubernetes_name
  
  - jobName: consul-services
    serviceDiscovery:
      consulSD:
      - server: "consul.service.consul:8500"
        datacenter: "dc1"
        services:
        - "api-service"
        - "web-service"
        - "database-service"
        tags:
        - "production"
        refreshInterval: "1m"
    relabelConfigs:
    - sourceLabels: [__meta_consul_service]
      targetLabel: consul_service
    - sourceLabels: [__meta_consul_node]
      targetLabel: consul_node
    - sourceLabels: [__meta_consul_tags]
      regex: ".*,production,.*"
      action: keep
  
  - jobName: dns-based-discovery
    serviceDiscovery:
      dnsSD:
      - names:
        - "_prometheus._tcp.monitoring.svc.cluster.local"
        type: "SRV"
        refreshInterval: "30s"
    relabelConfigs:
    - sourceLabels: [__meta_dns_name]
      targetLabel: dns_name
  
  - jobName: file-based-targets
    serviceDiscovery:
      fileSD:
      - files:
        - "/etc/prometheus/file_sd/targets.json"
        - "/etc/prometheus/file_sd/targets.yaml"
        refreshInterval: "5m"
  
  - jobName: aws-ec2-instances
    serviceDiscovery:
      ec2SD:
      - region: "us-east-1"
        accessKey: "AKIAIOSFODNN7EXAMPLE"
        secretKey:
          name: aws-credentials
          key: secret-key
        port: 9100
        filters:
        - name: "tag:Environment"
          values: ["production", "staging"]
        - name: "instance-state-name"
          values: ["running"]
    relabelConfigs:
    - sourceLabels: [__meta_ec2_tag_Name]
      targetLabel: instance_name
    - sourceLabels: [__meta_ec2_instance_type]
      targetLabel: instance_type
    - sourceLabels: [__meta_ec2_availability_zone]
      targetLabel: availability_zone
  
  - jobName: azure-vms
    serviceDiscovery:
      azureSD:
      - subscriptionId: "12345678-1234-1234-1234-123456789012"
        tenantId: "87654321-4321-4321-4321-210987654321"
        clientId: "abcdef01-2345-6789-abcd-ef0123456789"
        clientSecret:
          name: azure-credentials
          key: client-secret
        resourceGroup: "production-rg"
        port: 9100
    relabelConfigs:
    - sourceLabels: [__meta_azure_machine_name]
      targetLabel: vm_name
    - sourceLabels: [__meta_azure_machine_location]
      targetLabel: location
    - sourceLabels: [__meta_azure_machine_tag_environment]
      targetLabel: environment
  
  - jobName: gce-instances
    serviceDiscovery:
      gceSD:
      - project: "my-gcp-project"
        zone: "us-central1-a"
        port: 9100
        filter: "labels.environment=production"
        tagSeparator: ","
    relabelConfigs:
    - sourceLabels: [__meta_gce_instance_name]
      targetLabel: instance_name
    - sourceLabels: [__meta_gce_label_environment]
      targetLabel: environment
    - sourceLabels: [__meta_gce_zone]
      targetLabel: zone
  
  - jobName: static-targets
    serviceDiscovery:
      staticConfigs:
      - targets:
        - "prometheus1.example.com:9090"
        - "prometheus2.example.com:9090"
        labels:
          job: "federated-prometheus"
          environment: "production"
      - targets:
        - "blackbox1.example.com:9115"
        - "blackbox2.example.com:9115"
        labels:
          job: "blackbox-exporter"
          probe_type: "http"
