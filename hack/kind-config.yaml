# Kind cluster configuration for Gunj Operator development
# Creates a 3-node cluster (1 control plane, 2 workers) with necessary port mappings

kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: gunj-operator

# Cluster-wide settings
networking:
  podSubnet: "10.244.0.0/16"
  serviceSubnet: "10.96.0.0/12"
  disableDefaultCNI: false
  kubeProxyMode: "ipvs"

# Node configuration
nodes:
  # Control plane node
  - role: control-plane
    kubeadmConfigPatches:
      - |
        kind: InitConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "node-role.kubernetes.io/control-plane=true"
      - |
        kind: KubeProxyConfiguration
        featureGates:
          EphemeralContainers: true
      - |
        kind: KubeletConfiguration
        featureGates:
          EphemeralContainers: true
    # Port mappings for services
    extraPortMappings:
      # Operator webhook
      - containerPort: 9443
        hostPort: 9443
        protocol: TCP
      # API server
      - containerPort: 30081
        hostPort: 8081
        protocol: TCP
      # Prometheus
      - containerPort: 30090
        hostPort: 9090
        protocol: TCP
      # Grafana
      - containerPort: 30030
        hostPort: 3001
        protocol: TCP
      # Loki
      - containerPort: 30100
        hostPort: 3100
        protocol: TCP
      # Tempo
      - containerPort: 30200
        hostPort: 3200
        protocol: TCP
    # Mount local registry config
    extraMounts:
      - hostPath: /var/run/docker.sock
        containerPath: /var/run/docker.sock

  # Worker node 1
  - role: worker
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "node-role.kubernetes.io/worker=true,workload=observability"
    extraMounts:
      - hostPath: /var/run/docker.sock
        containerPath: /var/run/docker.sock

  # Worker node 2
  - role: worker
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "node-role.kubernetes.io/worker=true,workload=observability"
    extraMounts:
      - hostPath: /var/run/docker.sock
        containerPath: /var/run/docker.sock

# Feature gates and additional configurations
kubeadmConfigPatches:
  - |
    kind: ClusterConfiguration
    apiServer:
      extraArgs:
        "enable-admission-plugins": "NamespaceLifecycle,LimitRanger,ServiceAccount,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,PersistentVolumeClaimResize,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
    controllerManager:
      extraArgs:
        "feature-gates": "EphemeralContainers=true"
    scheduler:
      extraArgs:
        "feature-gates": "EphemeralContainers=true"

# containerd configuration for local registry
containerdConfigPatches:
  - |-
    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."localhost:5000"]
      endpoint = ["http://kind-registry:5000"]
