# Multi-cluster configuration for federation testing
# Creates 3 clusters: hub, member-1, member-2

---
# Hub Cluster - Central management cluster
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: gunj-operator-hub
nodes:
- role: control-plane
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "cluster-role=hub,ingress-ready=true"
  extraPortMappings:
  # Different ports to avoid conflicts
  - containerPort: 80
    hostPort: 8080
    protocol: TCP
  - containerPort: 443
    hostPort: 8443
    protocol: TCP
networking:
  apiServerPort: 6443
  podSubnet: "10.244.0.0/16"
  serviceSubnet: "10.96.0.0/12"

---
# Member Cluster 1
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4  
name: gunj-operator-member-1
nodes:
- role: control-plane
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "cluster-role=member,cluster-id=member-1"
- role: worker
  kubeadmConfigPatches:
  - |
    kind: JoinConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "node-role=worker"
networking:
  apiServerPort: 6444
  podSubnet: "10.245.0.0/16"
  serviceSubnet: "10.97.0.0/12"

---
# Member Cluster 2
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: gunj-operator-member-2
nodes:
- role: control-plane
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "cluster-role=member,cluster-id=member-2"
- role: worker
  kubeadmConfigPatches:
  - |
    kind: JoinConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "node-role=worker"
networking:
  apiServerPort: 6445
  podSubnet: "10.246.0.0/16"
  serviceSubnet: "10.98.0.0/12"
