# Artifact Storage Configuration
# Defines storage backends and policies for build artifacts
# Version: 2.0

# Storage backends configuration
storage_backends:
  # GitHub Artifacts (default for CI)
  github:
    enabled: true
    retention_policies:
      development:
        branches: ["develop", "feature/*", "bugfix/*"]
        retention_days: 7
        max_artifacts: 50
      staging:
        branches: ["staging", "release/*"]
        retention_days: 30
        max_artifacts: 100
      production:
        branches: ["main", "master"]
        retention_days: 90
        max_artifacts: 200
      releases:
        tags: ["v*"]
        retention_days: 365
        max_artifacts: unlimited
    
  # S3-compatible storage (for long-term storage)
  s3:
    enabled: true
    bucket: gunj-operator-artifacts
    region: us-east-1
    endpoint: # Leave empty for AWS S3
    path_patterns:
      binaries: "binaries/{branch}/{commit}/{component}-{version}-{arch}"
      containers: "containers/{branch}/{commit}/{component}-{version}-{arch}.tar"
      test_results: "test-results/{branch}/{run_number}/{timestamp}"
      coverage: "coverage/{branch}/{run_number}/{component}"
      releases: "releases/{version}/{artifact}"
    lifecycle_rules:
      - name: delete-old-development
        prefix: "binaries/feature/"
        expiration_days: 7
      - name: delete-old-test-results
        prefix: "test-results/"
        expiration_days: 30
      - name: transition-old-releases
        prefix: "releases/"
        transition_days: 90
        storage_class: GLACIER
    
  # Container registries
  registries:
    docker_hub:
      enabled: true
      namespace: gunjanjp
      retention_policy:
        keep_last: 10
        keep_tagged: true
        delete_untagged_after_days: 7
    
    github_packages:
      enabled: true
      namespace: ghcr.io/gunjanjp
      public: true
      retention_policy:
        keep_last: 20
        keep_tagged: true
        delete_untagged_after_days: 1
    
    aws_ecr:
      enabled: false
      region: us-east-1
      repository_prefix: gunj-operator
      retention_policy:
        keep_last: 5
        keep_tagged: true
        delete_untagged_after_days: 1

# Artifact types and their configurations
artifact_types:
  binaries:
    compression: gzip
    compression_level: 9
    naming_pattern: "{component}-{version}-{os}-{arch}{extension}"
    extensions:
      linux: ""
      darwin: ""
      windows: ".exe"
    metadata:
      include_checksums: true
      include_version_info: true
      include_build_info: true
  
  containers:
    format: oci
    compression: zstd
    layers:
      max_size: 100MB
      optimize: true
    tags:
      - "{version}"
      - "{version}-{arch}"
      - "{branch}-{commit_short}"
      - "latest-{arch}"
    labels:
      org.opencontainers.image.created: "{timestamp}"
      org.opencontainers.image.authors: "gunjanjp@gmail.com"
      org.opencontainers.image.source: "https://github.com/gunjanjp/gunj-operator"
      org.opencontainers.image.version: "{version}"
      org.opencontainers.image.revision: "{commit}"
      org.opencontainers.image.vendor: "Gunj Operator"
      org.opencontainers.image.licenses: "MIT"
      org.opencontainers.image.title: "{component}"
      org.opencontainers.image.description: "Enterprise Observability Platform - {component}"
  
  test_results:
    formats:
      - junit
      - json
      - html
    compression: zip
    include_logs: true
    include_screenshots: true
    naming_pattern: "{component}-test-results-{timestamp}"
  
  coverage:
    formats:
      - cobertura
      - lcov
      - html
    compression: tar.gz
    merge_reports: true
    naming_pattern: "{component}-coverage-{branch}-{commit_short}"
  
  releases:
    include_artifacts:
      - binaries
      - containers
      - charts
      - checksums
      - signatures
      - sbom
    compression: tar.gz
    signing:
      enabled: true
      tool: cosign
      key_ref: "${COSIGN_KEY}"
    checksums:
      algorithms:
        - sha256
        - sha512
    sbom:
      format: spdx
      include_dependencies: true

# Artifact organization structure
organization:
  directory_structure:
    ├── binaries/
    │   ├── operator/
    │   │   ├── linux-amd64/
    │   │   ├── linux-arm64/
    │   │   └── linux-arm-v7/
    │   ├── api/
    │   ├── cli/
    │   └── ui/
    ├── containers/
    │   ├── images/
    │   └── manifests/
    ├── test-results/
    │   ├── unit/
    │   ├── integration/
    │   └── e2e/
    ├── coverage/
    │   ├── reports/
    │   └── badges/
    └── releases/
        ├── stable/
        ├── beta/
        └── nightly/

# Cleanup policies
cleanup_policies:
  github_artifacts:
    enabled: true
    schedule: "0 2 * * *"  # Daily at 2 AM
    rules:
      - name: remove-old-pr-artifacts
        filter:
          event: pull_request
          age_days: 7
        action: delete
      - name: remove-failed-builds
        filter:
          conclusion: failure
          age_days: 3
        action: delete
  
  s3_artifacts:
    enabled: true
    schedule: "0 3 * * 0"  # Weekly on Sunday at 3 AM
    rules:
      - name: remove-old-dev-builds
        filter:
          path_prefix: "binaries/feature/"
          age_days: 7
        action: delete
      - name: archive-old-releases
        filter:
          path_prefix: "releases/"
          age_days: 90
        action: transition
        target_storage_class: GLACIER
  
  container_registries:
    enabled: true
    schedule: "0 4 * * *"  # Daily at 4 AM
    rules:
      - name: remove-untagged
        filter:
          tagged: false
          age_days: 1
        action: delete
      - name: keep-recent-tags
        filter:
          tagged: true
        action: keep_last
        count: 10

# Access control
access_control:
  s3:
    read_roles:
      - arn:aws:iam::123456789012:role/gunj-operator-ci-read
    write_roles:
      - arn:aws:iam::123456789012:role/gunj-operator-ci-write
    admin_roles:
      - arn:aws:iam::123456789012:role/gunj-operator-admin
  
  github:
    read_permissions:
      - pull
    write_permissions:
      - push
      - admin

# Monitoring and alerts
monitoring:
  metrics:
    - name: artifact_storage_size
      type: gauge
      unit: bytes
      labels: ["backend", "type"]
    - name: artifact_upload_duration
      type: histogram
      unit: seconds
      labels: ["backend", "type", "size_bucket"]
    - name: artifact_download_count
      type: counter
      labels: ["backend", "type", "component"]
  
  alerts:
    - name: storage-quota-exceeded
      condition: artifact_storage_size > 100GB
      severity: warning
      notification: slack
    - name: upload-failure-rate-high
      condition: rate(artifact_upload_failures) > 0.1
      severity: critical
      notification: pagerduty

# Cost optimization
cost_optimization:
  s3:
    intelligent_tiering: true
    lifecycle_transitions:
      - days: 30
        storage_class: STANDARD_IA
      - days: 90
        storage_class: GLACIER
    multipart_upload:
      threshold: 100MB
      part_size: 10MB
  
  bandwidth:
    cloudfront_distribution: true
    compress_transfers: true
    
# Security settings
security:
  encryption:
    at_rest:
      enabled: true
      algorithm: AES-256
      key_management: AWS_KMS
    in_transit:
      enabled: true
      tls_version: "1.3"
  
  access_logging:
    enabled: true
    bucket: gunj-operator-logs
    prefix: artifact-access/
  
  scanning:
    enabled: true
    tools:
      - trivy
      - grype
    fail_on_severity: HIGH
