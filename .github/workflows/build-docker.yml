# Reusable workflow for building Docker images
name: Build Docker Image

on:
  workflow_call:
    inputs:
      component:
        description: 'Component to build (operator, api, ui)'
        required: true
        type: string
      push:
        description: 'Whether to push the image'
        required: false
        type: boolean
        default: false
      platforms:
        description: 'Platforms to build for'
        required: false
        type: string
        default: 'linux/amd64,linux/arm64'
      registry:
        description: 'Container registry'
        required: false
        type: string
        default: 'docker.io'
      registry-user:
        description: 'Registry username'
        required: false
        type: string
        default: 'gunjanjp'
    outputs:
      image:
        description: 'Built image name with tag'
        value: ${{ jobs.build.outputs.image }}
      digest:
        description: 'Image digest'
        value: ${{ jobs.build.outputs.digest }}
    secrets:
      registry-password:
        description: 'Registry password'
        required: false

jobs:
  build:
    name: Build ${{ inputs.component }} image
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.tags }}
      digest: ${{ steps.build.outputs.digest }}
    steps:
    - uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to registry
      if: inputs.push
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry-user }}
        password: ${{ secrets.registry-password }}

    - name: Generate metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ inputs.registry }}/${{ inputs.registry-user }}/gunj-${{ inputs.component }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile.${{ inputs.component == 'operator' && '' || inputs.component }}
        platforms: ${{ inputs.platforms }}
        push: ${{ inputs.push }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          VERSION=${{ github.ref_name }}
          COMMIT=${{ github.sha }}
          BUILD_DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)
        provenance: true
        sbom: true

    - name: Generate SBOM
      if: inputs.push
      uses: anchore/sbom-action@v0
      with:
        image: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
        format: spdx-json
        output-file: sbom-${{ inputs.component }}.spdx.json

    - name: Sign image
      if: inputs.push
      env:
        COSIGN_EXPERIMENTAL: 1
      run: |
        for tag in $(echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n'); do
          echo "Signing $tag"
          cosign sign --yes "$tag"
        done

    - name: Upload SBOM
      if: inputs.push
      uses: actions/upload-artifact@v4
      with:
        name: sbom-${{ inputs.component }}
        path: sbom-${{ inputs.component }}.spdx.json
        retention-days: 30
