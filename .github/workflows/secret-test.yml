# Secret Test Workflow - Validates secret configuration
# This workflow is used to test that all required secrets are properly configured

name: Secret Configuration Test

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/secret-test.yml'
  schedule:
    # Run weekly to ensure secrets haven't expired
    - cron: '0 0 * * 0'

jobs:
  validate-secrets:
    name: Validate Required Secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Docker Hub Secrets
        run: |
          echo "Validating Docker Hub secrets..."
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
            echo "::error::DOCKER_USERNAME secret is not configured"
            exit 1
          fi
          if [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "::error::DOCKER_PASSWORD secret is not configured"
            exit 1
          fi
          echo "✅ Docker Hub secrets are configured"

      - name: Validate GitHub Container Registry
        run: |
          echo "Validating GHCR access..."
          if [ -z "${{ secrets.GITHUB_TOKEN }}" ]; then
            echo "::error::GITHUB_TOKEN is not available"
            exit 1
          fi
          echo "✅ GitHub Container Registry access is configured"

      - name: Validate Notification Secrets
        run: |
          echo "Validating notification secrets..."
          # Slack webhook is optional but recommended
          if [ -n "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            echo "✅ Slack webhook is configured"
          else
            echo "::warning::SLACK_WEBHOOK_URL is not configured (optional)"
          fi

      - name: Validate Code Signing Secrets
        run: |
          echo "Validating code signing secrets..."
          # GPG key for signing commits/releases
          if [ -n "${{ secrets.GPG_PRIVATE_KEY }}" ]; then
            echo "✅ GPG signing key is configured"
            if [ -z "${{ secrets.GPG_PASSPHRASE }}" ]; then
              echo "::error::GPG_PASSPHRASE is required when GPG_PRIVATE_KEY is set"
              exit 1
            fi
          else
            echo "::warning::GPG_PRIVATE_KEY is not configured (optional but recommended)"
          fi

      - name: Validate Security Scanning Secrets
        run: |
          echo "Validating security scanning secrets..."
          # Snyk token for vulnerability scanning
          if [ -n "${{ secrets.SNYK_TOKEN }}" ]; then
            echo "✅ Snyk token is configured"
          else
            echo "::warning::SNYK_TOKEN is not configured (optional)"
          fi
          
          # Sonar token for code quality
          if [ -n "${{ secrets.SONAR_TOKEN }}" ]; then
            echo "✅ Sonar token is configured"
          else
            echo "::warning::SONAR_TOKEN is not configured (optional)"
          fi

      - name: Summary
        run: |
          echo "## Secret Configuration Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Required Secrets" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ DOCKER_USERNAME" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ DOCKER_PASSWORD" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ GITHUB_TOKEN (automatic)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Optional Secrets" >> $GITHUB_STEP_SUMMARY
          echo "- $([[ -n '${{ secrets.SLACK_WEBHOOK_URL }}' ]] && echo '✅' || echo '❌') SLACK_WEBHOOK_URL" >> $GITHUB_STEP_SUMMARY
          echo "- $([[ -n '${{ secrets.GPG_PRIVATE_KEY }}' ]] && echo '✅' || echo '❌') GPG_PRIVATE_KEY" >> $GITHUB_STEP_SUMMARY
          echo "- $([[ -n '${{ secrets.SNYK_TOKEN }}' ]] && echo '✅' || echo '❌') SNYK_TOKEN" >> $GITHUB_STEP_SUMMARY
          echo "- $([[ -n '${{ secrets.SONAR_TOKEN }}' ]] && echo '✅' || echo '❌') SONAR_TOKEN" >> $GITHUB_STEP_SUMMARY
