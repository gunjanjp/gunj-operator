# Main CI Pipeline with Notifications
name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  GO_VERSION: '1.21'
  NODE_VERSION: '20'

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Run Go linting
        id: go-lint
        run: |
          echo "Running Go linting..."
          # Placeholder for actual linting
          echo "Go linting completed successfully"
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Run UI linting
        id: ui-lint
        run: |
          echo "Running UI linting..."
          # Placeholder for actual linting
          echo "UI linting completed successfully"

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        component: [operator, api, ui]
    steps:
      - uses: actions/checkout@v4
      
      - name: Run ${{ matrix.component }} tests
        id: test
        run: |
          echo "Running ${{ matrix.component }} tests..."
          # Placeholder for actual tests
          echo "${{ matrix.component }} tests completed successfully"

  build:
    name: Build Images
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - name: Build Docker images
        id: build
        run: |
          echo "Building Docker images..."
          # Placeholder for actual build
          echo "Build completed successfully"

  # Success notification job
  notify-success:
    name: Send Success Notifications
    if: ${{ success() }}
    needs: [lint, test, build]
    uses: ./.github/workflows/notifications.yml
    with:
      status: success
      workflow_name: CI Pipeline
      pull_request_number: ${{ github.event.pull_request.number }}
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
      SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
      NOTIFICATION_EMAIL_TO: ${{ secrets.NOTIFICATION_EMAIL_TO }}
      NOTIFICATION_EMAIL_FROM: ${{ secrets.NOTIFICATION_EMAIL_FROM }}

  # Failure notification job
  notify-failure:
    name: Send Failure Notifications
    if: ${{ failure() }}
    needs: [lint, test, build]
    uses: ./.github/workflows/notifications.yml
    with:
      status: failure
      workflow_name: CI Pipeline
      pull_request_number: ${{ github.event.pull_request.number }}
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
      SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
      NOTIFICATION_EMAIL_TO: ${{ secrets.NOTIFICATION_EMAIL_TO }}
      NOTIFICATION_EMAIL_FROM: ${{ secrets.NOTIFICATION_EMAIL_FROM }}

  # Create issue for critical failures
  create-failure-issue:
    name: Create Issue for Failure
    if: ${{ failure() && github.ref == 'refs/heads/main' }}
    needs: [lint, test, build]
    uses: ./.github/workflows/issue-on-failure.yml
    with:
      workflow_name: CI Pipeline
      error_message: "CI Pipeline failed on main branch. Check the workflow logs for details."
      severity: critical
      logs_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
